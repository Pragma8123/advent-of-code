import * as path from "path";
import { CodeFile } from "./codeFile.js";
import { File } from "./file.js";
import { InputFile } from "./inputFile.js";

export class TestFile extends File {
  get fileName() {
    return `day${this.day}.test.js`;
  }

  get codeFilePath() {
    return path.relative(
      ".",
      this.files.find((f) => f instanceof CodeFile).fileName
    );
  }

  get inputFilePath() {
    return path.relative(
      ".",
      this.files.find((f) => f instanceof InputFile).filePath
    );
  }

  createFileContents() {
    return `// generated by prepare script
import { readInput } from "../helpers/readInput.js";
import { part1, part2 } from "./${this.codeFilePath}";

const parseOpts = { delimiter: ',', transform: o => o };

describe("${this.year} - Day ${this.day}", () => {
  describe("Part 1", () => {
    it("returns the expected result for example", () => {
      const exampleInput = readInput("./2021/day3/example-input", parseOpts);
      expect(part1(exampleInput)).toEqual(true);
    });

    it("returns the expected result", () => {
      const input = readInput("./${this.inputFilePath}", parseOpts);
      expect(part1(input)).toEqual(true);
    });
  });

  describe("Part 2", () => {
    it("returns the expected result for example", () => {
      const exampleInput = readInput("./2021/day3/example-input", parseOpts);
      expect(part2(exampleInput)).toEqual(true);
    });

    it("returns the expected result", () => {
      const input = readInput("./${this.inputFilePath}", parseOpts);
      expect(part2(input)).toEqual(true);
    });
  });
});\n`;
  }
}
