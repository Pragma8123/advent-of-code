// generated by prepare script
class VentMap {
  map = {};

  add (x, y) {
    const key = `${x},${y}`;
    if (!this.map[key]) {
      this.map[key] = 1;
    } else {
      this.map[key] += 1;
    }
  }
}

export const part1 = (arr, diag = false) => {
  const ventMap = new VentMap();

  arr.forEach(([a, b]) => {
    const [x1, y1] = a;
    const [x2, y2] = b;

    if (x1 === x2) {
      const start = y1 < y2 ? y1 : y2;
      const end = y1 < y2 ? y2 : y1;

      for (let cy = start; cy <= end; cy += 1) {
        ventMap.add(x1, cy);
      }
    } else if (y1 === y2) {
      const start = x1 < x2 ? x1 : x2;
      const end = x1 < x2 ? x2 : x1;

      for (let cx = start; cx <= end; cx += 1) {
        ventMap.add(cx, y1);
      }
    } else if (diag) {
      const start = a[0] < b[0] ? a : b;
      const end = a[0] < b[0] ? b : a;
      const diff = end[0] - start[0];

      for (let offset = 0; offset <= diff; offset += 1) {
        const x = start[0] + offset;
        const y = start[1] < end[1] ? start[1] + offset : start[1] - offset;
        ventMap.add(x, y);
      }
    }
  });

  return Object.values(ventMap.map).filter((v) => v >= 2).length;
};

export const part2 = (arr) => part1(arr, true);
